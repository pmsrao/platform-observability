{
  "datasets": {
    "dataset_001": {
      "name": "dataset_001",
      "displayName": "Total Cost Summary",
      "queryLines": [
        "WITH cost_summary AS (",
        "  SELECT ",
        "    SUM(list_cost_usd) as total_cost_usd,",
        "    COUNT(DISTINCT workspace_key) as active_workspaces,",
        "    COUNT(DISTINCT entity_key) as active_entities,",
        "    AVG(list_cost_usd) as avg_daily_cost ",
        "  FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "  WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        ") ",
        "SELECT ",
        "  'Total Cost (30 days)' as metric,",
        "  CONCAT('$', FORMAT_NUMBER(total_cost_usd, 2)) as value,",
        "  'USD' as unit ",
        "FROM cost_summary ",
        "UNION ALL ",
        "SELECT ",
        "  'Active Workspaces' as metric,",
        "  CAST(active_workspaces AS STRING) as value,",
        "  'count' as unit ",
        "FROM cost_summary ",
        "UNION ALL ",
        "SELECT ",
        "  'Active Entities' as metric,",
        "  CAST(active_entities AS STRING) as value,",
        "  'count' as unit ",
        "FROM cost_summary ",
        "UNION ALL ",
        "SELECT ",
        "  'Avg Daily Cost' as metric,",
        "  CONCAT('$', FORMAT_NUMBER(avg_daily_cost, 2)) as value,",
        "  'USD/day' as unit ",
        "FROM cost_summary "
      ]
    },
    "dataset_002": {
      "name": "dataset_002",
      "displayName": "Cost Trend",
      "queryLines": [
        "SELECT ",
        "  date_key,",
        "  SUM(list_cost_usd) as daily_cost_usd,",
        "  AVG(SUM(list_cost_usd)) OVER (ORDER BY date_key ROWS 6 PRECEDING) as rolling_7day_avg ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "GROUP BY date_key ",
        "ORDER BY date_key "
      ]
    },
    "dataset_003": {
      "name": "dataset_003",
      "displayName": "Top Cost Centers",
      "queryLines": [
        "SELECT ",
        "  cost_center,",
        "  line_of_business,",
        "  SUM(list_cost_usd) as total_cost_usd,",
        "  COUNT(DISTINCT entity_key) as active_entities,",
        "  ROUND(try_divide(SUM(list_cost_usd), COUNT(DISTINCT entity_key)), 2) as cost_per_entity ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND cost_center != 'unallocated' ",
        "GROUP BY cost_center, line_of_business ",
        "ORDER BY total_cost_usd DESC ",
        "LIMIT 10 "
      ]
    },
    "dataset_004": {
      "name": "dataset_004",
      "displayName": "Runtime Health",
      "queryLines": [
        "WITH runtime_health AS (",
        "  SELECT ",
        "    c.dbr_version,",
        "    COUNT(DISTINCT c.cluster_key) as cluster_count,",
        "    SUM(f.list_cost_usd) as total_cost,",
        "    CASE ",
        "      WHEN c.dbr_version LIKE '%13.%' THEN 'Current' ",
        "      WHEN c.dbr_version LIKE '%12.%' THEN 'Recent' ",
        "      WHEN c.dbr_version LIKE '%11.%' THEN 'Older' ",
        "      ELSE 'Legacy' ",
        "    END as version_category ",
        "  FROM platform_observability.plt_gold.gld_fact_usage_priced_day f ",
        "  JOIN platform_observability.plt_gold.gld_dim_cluster c ON f.cluster_key = c.cluster_key ",
        "  WHERE f.date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "    AND c.is_current = true ",
        "  GROUP BY c.dbr_version, version_category ",
        ") ",
        "SELECT ",
        "  version_category,",
        "  COUNT(*) as runtime_versions,",
        "  SUM(cluster_count) as total_clusters,",
        "  SUM(total_cost) as total_cost_usd ",
        "FROM runtime_health ",
        "GROUP BY version_category ",
        "ORDER BY ",
        "  CASE version_category ",
        "    WHEN 'Current' THEN 1 ",
        "    WHEN 'Recent' THEN 2 ",
        "    WHEN 'Older' THEN 3 ",
        "    ELSE 4 ",
        "  END "
      ]
    },
    "dataset_005": {
      "name": "dataset_005",
      "displayName": "Monthly Cost Breakdown",
      "queryLines": [
        "SELECT ",
        "  DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') as month,",
        "  cost_center,",
        "  line_of_business,",
        "  SUM(list_cost_usd) as total_cost_usd,",
        "  COUNT(DISTINCT entity_key) as active_entities,",
        "  ROUND(try_divide(SUM(list_cost_usd), COUNT(DISTINCT entity_key)), 2) as cost_per_entity ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE cost_center != 'unallocated' ",
        "  AND date_key >= date_format(date_sub(current_date(), 90), 'yyyyMMdd') ",
        "GROUP BY DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM'), cost_center, line_of_business ",
        "ORDER BY month DESC, total_cost_usd DESC "
      ]
    },
    "dataset_006": {
      "name": "dataset_006",
      "displayName": "Job Performance Analysis",
      "queryLines": [
        "SELECT ",
        "  e.name as job_name,",
        "  e.workspace_name,",
        "  COUNT(DISTINCT f.job_run_id) as total_runs,",
        "  AVG(f.duration_hours) as avg_duration_hours,",
        "  SUM(f.list_cost_usd) as total_cost_usd,",
        "  ROUND(try_divide(SUM(f.list_cost_usd), COUNT(DISTINCT f.job_run_id)), 2) as cost_per_run ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day f ",
        "JOIN platform_observability.plt_gold.gld_dim_entity e ON f.entity_key = e.entity_key ",
        "WHERE f.date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND e.is_current = true ",
        "  AND e.entity_type IN ('JOB', 'PIPELINE') ",
        "GROUP BY e.name, e.workspace_name ",
        "HAVING COUNT(DISTINCT f.job_run_id) >= 5 ",
        "ORDER BY total_cost_usd DESC ",
        "LIMIT 15 "
      ]
    },
    "dataset_007": {
      "name": "dataset_007",
      "displayName": "Filter Parameters",
      "queryLines": [
        "SELECT ",
        "  DISTINCT workspace_name ",
        "FROM platform_observability.plt_gold.gld_dim_workspace ",
        "WHERE status = 'ACTIVE' ",
        "ORDER BY workspace_name "
      ]
    },
    "dataset_008": {
      "name": "dataset_008",
      "displayName": "Cost Allocation by Business Unit",
      "queryLines": [
        "SELECT ",
        "  line_of_business,",
        "  cost_center,",
        "  department,",
        "  SUM(list_cost_usd) as total_cost_usd,",
        "  COUNT(DISTINCT entity_key) as active_entities,",
        "  COUNT(DISTINCT workspace_key) as active_workspaces,",
        "  ROUND(try_divide(SUM(list_cost_usd), COUNT(DISTINCT entity_key)), 2) as cost_per_entity ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND cost_center != 'unallocated' ",
        "  AND line_of_business != 'Unknown' ",
        "GROUP BY line_of_business, cost_center, department ",
        "ORDER BY total_cost_usd DESC "
      ]
    },
    "dataset_009": {
      "name": "dataset_009",
      "displayName": "Budget vs Actual Tracking",
      "queryLines": [
        "WITH monthly_costs AS (",
        "  SELECT ",
        "    DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') as month,",
        "    SUM(list_cost_usd) as actual_cost,",
        "    LAG(SUM(list_cost_usd)) OVER (ORDER BY DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM')) as prev_month_cost ",
        "  FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "  WHERE date_key >= date_format(date_sub(current_date(), 90), 'yyyyMMdd') ",
        "  GROUP BY DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') ",
        ") ",
        "SELECT ",
        "  month,",
        "  actual_cost,",
        "  prev_month_cost,",
        "  ROUND(try_divide((actual_cost - prev_month_cost), prev_month_cost) * 100, 2) as month_over_month_change_pct ",
        "FROM monthly_costs ",
        "ORDER BY month DESC "
      ]
    },
    "dataset_010": {
      "name": "dataset_010",
      "displayName": "Runtime Modernization Opportunities",
      "queryLines": [
        "WITH runtime_analysis AS (",
        "  SELECT ",
        "    c.cluster_id,",
        "    c.cluster_name,",
        "    c.dbr_version,",
        "    c.major_version,",
        "    c.minor_version,",
        "    c.runtime_age_months,",
        "    c.is_lts,",
        "    c.is_current,",
        "    CASE ",
        "      WHEN c.dbr_version LIKE '%13.%' THEN 'Current' ",
        "      WHEN c.dbr_version LIKE '%12.%' THEN 'Recent' ",
        "      WHEN c.dbr_version LIKE '%11.%' THEN 'Older' ",
        "      ELSE 'Legacy' ",
        "    END as version_category,",
        "    CASE ",
        "      WHEN c.dbr_version LIKE '%11.%' OR c.dbr_version LIKE '%10.%' THEN 'CRITICAL - End of Support' ",
        "      WHEN c.dbr_version LIKE '%12.%' AND c.runtime_age_months >= 12 THEN 'HIGH - Plan for Upgrade' ",
        "      WHEN c.dbr_version LIKE '%13.%' THEN 'LOW - Current and Supported' ",
        "      ELSE 'MEDIUM - Consider Upgrade' ",
        "    END as upgrade_priority ",
        "  FROM platform_observability.plt_gold.gld_dim_cluster c ",
        "  WHERE c.is_current = true ",
        ") ",
        "SELECT ",
        "  upgrade_priority,",
        "  version_category,",
        "  COUNT(*) as cluster_count,",
        "  AVG(runtime_age_months) as avg_runtime_age,",
        "  STRING_AGG(DISTINCT dbr_version, ', ') as affected_runtimes ",
        "FROM runtime_analysis ",
        "GROUP BY upgrade_priority, version_category ",
        "ORDER BY ",
        "  CASE upgrade_priority ",
        "    WHEN 'CRITICAL - End of Support' THEN 1 ",
        "    WHEN 'HIGH - Plan for Upgrade' THEN 2 ",
        "    WHEN 'MEDIUM - Consider Upgrade' THEN 3 ",
        "    ELSE 4 ",
        "  END "
      ]
    },
    "dataset_011": {
      "name": "dataset_011",
      "displayName": "Cluster Sizing Optimization",
      "queryLines": [
        "SELECT ",
        "  c.cluster_name,",
        "  c.worker_node_type_category,",
        "  c.min_autoscale_workers,",
        "  c.max_autoscale_workers,",
        "  AVG(f.duration_hours) as avg_duration,",
        "  SUM(f.list_cost_usd) as total_cost,",
        "  COUNT(DISTINCT f.job_run_id) as total_runs,",
        "  ROUND(try_divide(SUM(f.list_cost_usd), COUNT(DISTINCT f.job_run_id)), 2) as cost_per_run ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day f ",
        "JOIN platform_observability.plt_gold.gld_dim_cluster c ON f.cluster_key = c.cluster_key ",
        "WHERE f.date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND c.is_current = true ",
        "GROUP BY c.cluster_name, c.worker_node_type_category, c.min_autoscale_workers, c.max_autoscale_workers ",
        "HAVING COUNT(DISTINCT f.job_run_id) >= 3 ",
        "ORDER BY total_cost DESC ",
        "LIMIT 20 "
      ]
    },
    "dataset_012": {
      "name": "dataset_012",
      "displayName": "Node Type Analysis",
      "queryLines": [
        "SELECT ",
        "  c.worker_node_type_category,",
        "  c.dbr_version,",
        "  SUM(f.list_cost_usd) as total_cost,",
        "  AVG(f.duration_hours) as avg_duration,",
        "  COUNT(DISTINCT f.job_run_id) as total_runs,",
        "  ROUND(try_divide(SUM(f.list_cost_usd), COUNT(DISTINCT f.job_run_id)), 2) as cost_per_run ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day f ",
        "JOIN platform_observability.plt_gold.gld_dim_cluster c ON f.cluster_key = c.cluster_key ",
        "WHERE f.date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND c.is_current = true ",
        "GROUP BY c.worker_node_type_category, c.dbr_version ",
        "ORDER BY total_cost DESC "
      ]
    },
    "dataset_013": {
      "name": "dataset_013",
      "displayName": "Workflow Hierarchy Cost",
      "queryLines": [
        "SELECT ",
        "  workflow_level,",
        "  parent_workflow_name,",
        "  line_of_business,",
        "  cost_center,",
        "  COUNT(DISTINCT entity_key) as entity_count,",
        "  SUM(list_cost_usd) as total_cost_usd,",
        "  COUNT(DISTINCT workspace_key) as workspace_count,",
        "  ROUND(try_divide(SUM(list_cost_usd), COUNT(DISTINCT entity_key)), 2) as cost_per_entity ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND workflow_level != 'STANDALONE' ",
        "  AND cost_center != 'unallocated' ",
        "GROUP BY workflow_level, parent_workflow_name, line_of_business, cost_center ",
        "ORDER BY total_cost_usd DESC "
      ]
    },
    "dataset_014": {
      "name": "dataset_014",
      "displayName": "Tag Quality Analysis",
      "queryLines": [
        "WITH tag_coverage AS (",
        "  SELECT ",
        "    workspace_key,",
        "    COUNT(*) as total_records,",
        "    SUM(CASE WHEN cost_center != 'unallocated' THEN 1 ELSE 0 END) as cost_center_tagged,",
        "    SUM(CASE WHEN line_of_business != 'Unknown' THEN 1 ELSE 0 END) as lob_tagged,",
        "    SUM(CASE WHEN department IS NOT NULL AND department != '' THEN 1 ELSE 0 END) as dept_tagged ",
        "  FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "  WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  GROUP BY workspace_key ",
        ") ",
        "SELECT ",
        "  w.workspace_name,",
        "  tc.total_records,",
        "  tc.cost_center_tagged,",
        "  tc.lob_tagged,",
        "  tc.dept_tagged,",
        "  ROUND(try_divide(tc.cost_center_tagged, tc.total_records) * 100, 2) as cost_center_coverage_pct,",
        "  ROUND(try_divide(tc.lob_tagged, tc.total_records) * 100, 2) as lob_coverage_pct,",
        "  ROUND(try_divide(tc.dept_tagged, tc.total_records) * 100, 2) as dept_coverage_pct ",
        "FROM tag_coverage tc ",
        "JOIN platform_observability.plt_gold.gld_dim_workspace w ON tc.workspace_key = w.workspace_key ",
        "WHERE w.is_current = true ",
        "ORDER BY cost_center_coverage_pct ASC "
      ]
    },
    "dataset_015": {
      "name": "dataset_015",
      "displayName": "Usage Pattern Analysis",
      "queryLines": [
        "SELECT ",
        "  environment,",
        "  HOUR(usage_start_time) as hour_of_day,",
        "  COUNT(*) as usage_count,",
        "  SUM(usage_quantity) as total_usage,",
        "  AVG(usage_quantity) as avg_usage,",
        "  SUM(list_cost_usd) as total_cost ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND usage_start_time IS NOT NULL ",
        "GROUP BY environment, HOUR(usage_start_time) ",
        "ORDER BY environment, hour_of_day "
      ]
    },
    "dataset_016": {
      "name": "dataset_016",
      "displayName": "Business Unit Performance",
      "queryLines": [
        "SELECT ",
        "  line_of_business,",
        "  use_case,",
        "  COUNT(DISTINCT entity_key) as active_entities,",
        "  SUM(list_cost_usd) as total_cost_usd,",
        "  SUM(usage_quantity) as total_usage,",
        "  ROUND(try_divide(SUM(list_cost_usd), COUNT(DISTINCT entity_key)), 2) as cost_per_entity,",
        "  ROUND(try_divide(SUM(list_cost_usd), SUM(usage_quantity)), 4) as cost_per_unit ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 30), 'yyyyMMdd') ",
        "  AND line_of_business != 'Unknown' ",
        "  AND use_case IS NOT NULL ",
        "GROUP BY line_of_business, use_case ",
        "ORDER BY total_cost_usd DESC "
      ]
    },
    "dataset_017": {
      "name": "dataset_017",
      "displayName": "Project Cost Tracking",
      "queryLines": [
        "SELECT ",
        "  DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') as month,",
        "  line_of_business,",
        "  sub_project,",
        "  SUM(list_cost_usd) as project_cost_usd,",
        "  COUNT(DISTINCT entity_key) as active_entities,",
        "  COUNT(DISTINCT workspace_key) as active_workspaces ",
        "FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "WHERE date_key >= date_format(date_sub(current_date(), 90), 'yyyyMMdd') ",
        "  AND line_of_business != 'Unknown' ",
        "  AND sub_project IS NOT NULL ",
        "GROUP BY DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM'), line_of_business, sub_project ",
        "ORDER BY month DESC, project_cost_usd DESC "
      ]
    },
    "dataset_018": {
      "name": "dataset_018",
      "displayName": "Cost Center Analysis",
      "queryLines": [
        "WITH cost_summary AS (",
        "  SELECT ",
        "    cost_center,",
        "    line_of_business,",
        "    department,",
        "    DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') as month,",
        "    SUM(list_cost_usd) as monthly_cost,",
        "    COUNT(DISTINCT entity_key) as active_entities ",
        "  FROM platform_observability.plt_gold.gld_fact_usage_priced_day ",
        "  WHERE cost_center != 'unallocated' ",
        "    AND date_key >= date_format(date_sub(current_date(), 90), 'yyyyMMdd') ",
        "  GROUP BY cost_center, line_of_business, department, DATE_FORMAT(TO_DATE(CAST(date_key AS STRING), 'yyyyMMdd'), 'yyyy-MM') ",
        ") ",
        "SELECT ",
        "  cost_center,",
        "  line_of_business,",
        "  department,",
        "  month,",
        "  monthly_cost,",
        "  active_entities,",
        "  ROUND(try_divide(monthly_cost, active_entities), 2) as cost_per_entity,",
        "  LAG(monthly_cost) OVER (PARTITION BY cost_center ORDER BY month) as prev_month_cost,",
        "  ROUND(try_divide((monthly_cost - LAG(monthly_cost) OVER (PARTITION BY cost_center ORDER BY month)), LAG(monthly_cost) OVER (PARTITION BY cost_center ORDER BY month)) * 100, 2) as cost_change_pct ",
        "FROM cost_summary ",
        "ORDER BY cost_center, month "
      ]
    }
  }
}
